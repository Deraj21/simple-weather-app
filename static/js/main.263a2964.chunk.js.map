{"version":3,"sources":["components/Hour.js","components/Widget.js","private.js","App.js","index.js"],"names":["Hour","props","hr","tmp","coldest","hottest","color","react_default","a","createElement","style","backgroundColor","className","Widget","data","city","state","temps","map","val","temp","hot","findIndex","Math","max","apply","Object","toConsumableArray","cold","min","hours","hour","i","date","Date","timestamp_utc","time","concat","getHours","key","now","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","postalCode","weatherData","_this2","Axios","get","then","response","_response$data","city_name","state_code","filteredData","filter","item","day","getDay","setState","catch","err","console","log","message","getWeather","_this3","_this$state","onChange","e","handleChange","target","value","type","onClick","handleClick","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.263a2964.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Hour(props){\r\n\r\n  let { hr, tmp, coldest, hottest } = props;\r\n  let color = 'white';\r\n\r\n  if (coldest){\r\n    color = 'rgba(0,143,254,.45)'\r\n  } else if (hottest){\r\n    color = 'rgba(254,0,76,.45)'\r\n  }\r\n\r\n  return (\r\n    <div style={{ backgroundColor: color }}className=\"Hour\">\r\n      <p>{hr}:</p>\r\n      <p>{tmp}Â°F</p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Hour from './Hour';\r\n\r\nexport default function Widget(props){\r\n\r\n  let { data, city, state } = props;\r\n  let temps = data.map( val => val.temp);\r\n\r\n  let hot = temps.findIndex( temp => temp === Math.max(...temps) );\r\n  let cold = temps.findIndex( temp => temp === Math.min(...temps) );\r\n\r\n  let hours = data.map((hour, i) => {\r\n    let date = new Date(hour.timestamp_utc);\r\n    let time = `${date.getHours() % 12 + 1}${date.getHours() < 11 ? ' am' : date.getHours() > 22 ? ' am' : ' pm'}`;\r\n    \r\n    return <Hour hr={time} tmp={hour.temp} coldest={cold === i} hottest={hot === i} key={`hour-${i}`}/>\r\n  }\r\n  )\r\n\r\n  return (\r\n    <div className=\"Widget\">\r\n      <h2>Weather in <strong>{city}, {state}</strong> Tomorrow:</h2>\r\n      { hours }\r\n    </div>\r\n  );\r\n}\r\n","const API_KEY = 'ecb047c847dc4caeb7782c02f3856aaa';\r\n\r\nexport default API_KEY;\r\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport Widget from './components/Widget';\n\nimport API_KEY from './private';\nconst BASE_URL = 'https://api.weatherbit.io/v2.0/forecast/hourly';\nlet now = new Date(Date.now());\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      postalCode: 85209,\n      city: '',\n      state: '',\n      weatherData: []\n    }\n  }\n\n  getWeather(){\n    let { postalCode } = this.state;\n\n    Axios.get(`${BASE_URL}?postal_code=${postalCode}&country=US&key=${API_KEY}&hours=48&units=I`)\n      .then( response => {\n        let { city_name, state_code } = response.data;\n        let filteredData = response.data.data.filter( item => {\n          let date = new Date(item.timestamp_utc);\n          \n          let day = now.getDay() + 1;\n          if (date.getDay() === day){\n            return true;\n          }\n          return false;\n        });\n        this.setState({ weatherData: filteredData, city: city_name, state: state_code });\n      })\n      .catch( err => console.log(`Axios Err: ${err.message}`));\n  }\n\n  componentDidMount(){\n    this.getWeather();\n  }\n\n  handleChange(val){\n    this.setState({ postalCode: val });\n  }\n\n  handleClick(){\n    this.getWeather();\n  }\n\n  render() {\n\n    let { weatherData, city, state, postalCode } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Weather</h1>\n        </div>\n        <div className=\"content\">\n          <div className=\"inputs\">\n            <span>Input US Postal Code:</span>\n            <input onChange={e => this.handleChange(e.target.value)} value={postalCode} type=\"number\"/>\n            <button onClick={() => this.handleClick()} >GO</button>\n          </div>\n          <hr/>\n          <Widget data={weatherData} city={city} state={state} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}